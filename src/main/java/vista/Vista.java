package vista;

import AEMET.model.entities.EstMeteorologia;
import AEMET.model.entities.Estacion;
import AEMET.model.entities.Provincia;
import AEMET.model.logica.Controlador;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cortiz3
 */
public class Vista extends javax.swing.JFrame {

    private ArrayList<EstMeteorologia> datosAEMET; //ArrayList de la EstMeteorología.
    private DefaultTableModel modelo;
    private String datos[]; //Array de datos para rellenar la tabla.

    //Array para las magnitudes.
    private String[] listaMagnitudes = {"Temperatura",
        "Presión",
        "Humedad",
        "Precipitación",
        "Velocidad del Viento",
        "Dirección del viento",
        "Insolación"};

    public Vista() {
        initComponents();

        panelGrafica.setLayout(new java.awt.BorderLayout());

        cargarCmbProvincia(); //Método para cargar las provincias en el comboBox.
        cargarMagnitudes(); //Método para cargar las magnitudes al comboBox.

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSuperior = new javax.swing.JPanel();
        lblProvincia = new javax.swing.JLabel();
        cmbProvincia = new javax.swing.JComboBox();
        lblEstacion = new javax.swing.JLabel();
        cmbEstacion = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        lblFechaInicio = new javax.swing.JLabel();
        lblFechaFin = new javax.swing.JLabel();
        fechaInicio = new com.toedter.calendar.JDateChooser();
        fechaFin = new com.toedter.calendar.JDateChooser();
        panelTabla = new javax.swing.JPanel();
        srcTabla = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbMagnitud = new javax.swing.JComboBox();
        btnCrear = new javax.swing.JButton();
        panelGrafica = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aemet");

        lblProvincia.setText("Provincia");

        cmbProvincia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProvincia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProvinciaItemStateChanged(evt);
            }
        });

        lblEstacion.setText("Estación");

        cmbEstacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblFechaInicio.setText("Fecha de Inicio");

        lblFechaFin.setText("Fecha de Fin");

        javax.swing.GroupLayout panelSuperiorLayout = new javax.swing.GroupLayout(panelSuperior);
        panelSuperior.setLayout(panelSuperiorLayout);
        panelSuperiorLayout.setHorizontalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSuperiorLayout.createSequentialGroup()
                        .addComponent(lblProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSuperiorLayout.createSequentialGroup()
                        .addComponent(lblFechaInicio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)))
                .addGap(39, 39, 39)
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSuperiorLayout.createSequentialGroup()
                        .addComponent(lblFechaFin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelSuperiorLayout.createSequentialGroup()
                        .addComponent(lblEstacion, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEstacion, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(215, 215, 215)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelSuperiorLayout.setVerticalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSuperiorLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEstacion, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbEstacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFechaFin)
                            .addComponent(lblFechaInicio)
                            .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelSuperiorLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        tabla.setBackground(new java.awt.Color(255, 255, 255));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ubicación", "Longitud", "Latitud", "Altitud", "Fecha/Hora", "Precipitación Acumulada", "Temperatura máxima Aire", "Presión", "Humedad", "Velocidad Máxima Viento", "Dirección Viento", "Temperatura Instantánea", "Insolación"
            }
        ));
        srcTabla.setViewportView(tabla);

        jLabel1.setText("Magnitud");

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelTablaLayout = new javax.swing.GroupLayout(panelTabla);
        panelTabla.setLayout(panelTablaLayout);
        panelTablaLayout.setHorizontalGroup(
            panelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(srcTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTablaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(cmbMagnitud, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108))
                    .addGroup(panelTablaLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        panelTablaLayout.setVerticalGroup(
            panelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTablaLayout.createSequentialGroup()
                        .addGroup(panelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cmbMagnitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCrear))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelGrafica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(srcTabla, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelTabla, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(panelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método de evento para el comboBox de provincias.
     *
     *
     * @param evt
     */
    private void cmbProvinciaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProvinciaItemStateChanged

        //Carga el método de la lista de Estaciones.
        //Se hace un cast a provincias.
        //Se pone el cmbProvincia para que detecte el seleccionar.
        cargarCmbEstaciones((Provincia) cmbProvincia.getSelectedItem()); //Esto hace que cuando se seleccione una provincia,
        //cargue el método de las estaciones y 
        //añada en el cmbBox de estaciones la estación de la provincia escogida.


    }//GEN-LAST:event_cmbProvinciaItemStateChanged

    /**
     * Método de evento del botón de buscar.
     *
     * Añade a la tabla los datos del aemet buscando por las fechas.
     *
     * @param evt
     */
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        //Se crea un objeto tipo Estación que igual al cmbBox de Estación.
        Estacion e = (Estacion) cmbEstacion.getSelectedItem();

        //Se crea dos objetos de tipo Date que es igual a la fecha que coge un Date. (Los campos de fecha es un JCalendar)
        Date fecha1 = fechaInicio.getDate();
        Date fecha2 = fechaFin.getDate();
        
        datosAEMET = Controlador.Fechas(fecha1, fecha2, e); //El arrayList de datosAemet es igual al método del controlador que pasa una query de busqueda por fechas.
        
            modelo = (DefaultTableModel) tabla.getModel();
            modelo.setRowCount(0); //pone 0 la tabla
            leerDatos(datosAEMET); //Se carga el método de leer los datos del AEMET.

    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * Método de evento para el botón de crear.
     *
     * @param evt
     */
    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed

        //Se crea un objeto de tipo String que es igual comboBox de magnitud.
        String seleccionar = cmbMagnitud.getSelectedItem().toString();

        //Se crea objetos de cada magnitud de la clase Gráfica con los datos del AEMET.
        Grafica gT = new Grafica(datosAEMET);
        Grafica gP = new Grafica(datosAEMET);
        Grafica gH = new Grafica(datosAEMET);
        Grafica gPr = new Grafica(datosAEMET);
        Grafica gVV = new Grafica(datosAEMET);
        Grafica gDV = new Grafica(datosAEMET);
        Grafica gI = new Grafica(datosAEMET);

        //Se crea if para poder seleccionar en el comboBox de las magnitudes.
        if (listaMagnitudes[0].equals(seleccionar)) { //SÍ se selecciona el parámetro que está en la posición 0 del comboBox ENTONCES que añada en el panel de la gráfica la gráfica de la temperatura con los datos del AEMET.

            panelGrafica.add(gT.TemperaturaInstantanea());
        }

        if (listaMagnitudes[1].equals(seleccionar)) {
            panelGrafica.add(gP.Presion());

        }

        if (listaMagnitudes[2].equals(seleccionar)) {
            panelGrafica.add(gH.Humedad());

        }

        if (listaMagnitudes[3].equals(seleccionar)) {
            panelGrafica.add(gPr.Precipitacion());
        }

        if (listaMagnitudes[4].equals(seleccionar)) {
            panelGrafica.add(gVV.VelocidadViento());

        }

        if (listaMagnitudes[5].equals(seleccionar)) {
            panelGrafica.add(gDV.DireccionViento());

        }

        if (listaMagnitudes[6].equals(seleccionar)) {
            panelGrafica.add(gI.Insolación());
        }

        panelGrafica.validate();

    }//GEN-LAST:event_btnCrearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Vista().setVisible(true);
        });
    }

    /**
     * Método para llenar el comboBox de provincias.
     *
     */
    private void cargarCmbProvincia() {

        //Se crea un arrayList de provincias que es igual al método del controlador para listar las provincias.
        ArrayList<Provincia> lista = Controlador.listarProvincias();
        cmbProvincia.removeAllItems(); //Se borra lo que haya en el comBox

        //for-each para pasar de los datos que hay en listar del controlador a la variable "lista".
        for (Provincia lista1 : lista) {
            cmbProvincia.addItem(lista1); //Se añaden al comboBox las provincias.
        }

    }

    /**
     * Método para llenar el comboBox de Estaciones.
     *
     * @param p
     */
    private void cargarCmbEstaciones(Provincia p) {
        ArrayList<Estacion> lista = Controlador.ListarEstaciones(p);
        cmbEstacion.removeAllItems();
        for (Estacion lista1 : lista) {
            cmbEstacion.addItem(lista1);
        }

    }

    /**
     * Método para llenar el comboBox de magnitudes.
     *
     */
    public void cargarMagnitudes() {
        cmbMagnitud.removeAllItems();
        for (String magnitud : listaMagnitudes) {
            cmbMagnitud.addItem(magnitud);
        }
    }

    /**
     * Método para leer los datos de EstaMeteorología para la tabla.
     *
     * @param estMeteorologias
     */
    public void leerDatos(ArrayList<EstMeteorologia> estMeteorologias) {

        for (EstMeteorologia lista1 : estMeteorologias) {
            cargarDatos(lista1); // Carga el método de los datos del Aemet.

        }

    }

    /**
     * Método para cargar los datos de EstaMeteorología para la tabla.
     *
     * @param estMeteorologia
     */
    public void cargarDatos(EstMeteorologia estMeteorologia) {

        datos = new String[modelo.getColumnCount()]; //La variable global Datos coge la cantidad de columnas que hay.

        //Pasa por cada posición los datos de EstaMeteorología.
        datos[0] = estMeteorologia.getUbicacion();
        datos[1] = estMeteorologia.getLongitud().toString();
        datos[2] = estMeteorologia.getLatitud().toString();
        datos[3] = estMeteorologia.getAltitud().toString();
        datos[4] = estMeteorologia.getEstMeteorologiaPK().getFechaHora().toString();
        datos[5] = estMeteorologia.getPrecAcumulada().toString();
        datos[6] = estMeteorologia.getTempMaxAire().toString();
        datos[7] = estMeteorologia.getPresion().toString();
        datos[8] = estMeteorologia.getHumedad().toString();
        datos[9] = estMeteorologia.getVeloMaxViento().toString();
        datos[10] = estMeteorologia.getDireccViento().toString();
        datos[11] = estMeteorologia.getTempInstantanea().toString();
        datos[12] = estMeteorologia.getDuracionInsolacion().toString();

        modelo.addRow(datos);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JComboBox cmbEstacion;
    private javax.swing.JComboBox cmbMagnitud;
    private javax.swing.JComboBox cmbProvincia;
    private com.toedter.calendar.JDateChooser fechaFin;
    private com.toedter.calendar.JDateChooser fechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblEstacion;
    private javax.swing.JLabel lblFechaFin;
    private javax.swing.JLabel lblFechaInicio;
    private javax.swing.JLabel lblProvincia;
    private javax.swing.JPanel panelGrafica;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JPanel panelTabla;
    private javax.swing.JScrollPane srcTabla;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
